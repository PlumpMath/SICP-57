(define (make-queue)
	(let ((front-ptr '(()))
		  (rear-ptr '()))
	
	(define (insert-queue item) 
		(if (null? (car front-ptr)) 
			(begin (set-car! front-ptr item) (set! rear-ptr (cons item '())))
			(begin (set-cdr! front-ptr (append (cdr front-ptr) (cons item '()))) (set! rear-ptr item))
		)
	)
	(define (delete-queue) 
		(if (null? (car front-ptr))
		 	(error "DELETE called on an empty queue")
            (set! front-ptr (cdr front-ptr))
		)
	) 
	(define (dispatch m)
		(cond ((eq? m 'insert) insert-queue)
              ((eq? m 'delete) (delete-queue))
			  ((eq? m 'print) front-ptr))
	)  
	dispatch))
